@font-face {
  font-family: 'Roboto Regular';
  src: url("../fonts/Roboto-Regular.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Roboto Condensed Bold';
  src: url("../fonts/RobotoCondensed-Bold.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Ubuntu Regular';
  src: url("../fonts/Ubuntu-Regular.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Ubuntu Medium';
  src: url("../fonts/Ubuntu-Medium.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Ubuntu Bold';
  src: url("../fonts/Ubuntu-Bold.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */

/* Document
   ========================================================================== */

/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */

html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */

/**
 * Remove the margin in all browsers.
 */

body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */

main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */

hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */

/**
 * Remove the gray background on active links in IE 10.
 */

a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */

abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */

b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove the border on images inside links in IE 10.
 */

img {
  border-style: none;
}

/* Forms
   ========================================================================== */

/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */

button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */

button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */

button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */

fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */

legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */

progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */

textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */

[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */

[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */

[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */

/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */

details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */

summary {
  display: list-item;
}

/* Misc
   ========================================================================== */

/**
 * Add the correct display in IE 10+.
 */

template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */

[hidden] {
  display: none;
}

/* Slider */

.slick-slider {
  position: relative;
  display: block;
  box-sizing: border-box;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  touch-action: pan-y;
  -webkit-tap-highlight-color: transparent;
}

.slick-list {
  position: relative;
  overflow: hidden;
  display: block;
  margin: 0;
  padding: 0;
}

.slick-list:focus {
  outline: none;
}

.slick-list.dragging {
  cursor: pointer;
  cursor: hand;
}

.slick-slider .slick-track,
.slick-slider .slick-list {
  -webkit-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
}

.slick-track {
  position: relative;
  left: 0;
  top: 0;
  display: block;
  margin-left: auto;
  margin-right: auto;
}

.slick-track:before,
.slick-track:after {
  content: "";
  display: table;
}

.slick-track:after {
  clear: both;
}

.slick-loading .slick-track {
  visibility: hidden;
}

.slick-slide {
  float: left;
  height: 100%;
  min-height: 1px;
  display: none;
}

[dir="rtl"] .slick-slide {
  float: right;
}

.slick-slide img {
  display: block;
}

.slick-slide.slick-loading img {
  display: none;
}

.slick-slide.dragging img {
  pointer-events: none;
}

.slick-initialized .slick-slide {
  display: block;
}

.slick-loading .slick-slide {
  visibility: hidden;
}

.slick-vertical .slick-slide {
  display: block;
  height: auto;
  border: 1px solid transparent;
}

.slick-arrow.slick-hidden {
  display: none;
}

.wrapper {
  max-width: 1170px;
  margin: 0 auto;
  padding-left: 30px;
  padding-right: 30px;
}

a {
  text-decoration: none;
  color: inherit;
}

p {
  margin: 0;
}

.visibility-hidden {
  display: none;
}

img {
  max-width: 100%;
}

.topline {
  padding: 20px 0;
  background: -webkit-repeating-linear-gradient(145deg, #2d3b4a, #2d3b4a 25px, #283543 25px, #283543 50px);
  background: repeating-linear-gradient(-55deg, #2d3b4a, #2d3b4a 25px, #283543 25px, #283543 50px);
}

.topline__items {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
}

.topline__item {
  width: 250px;
  height: 46px;
}

.topline__button {
  position: relative;
  padding: 0 12px;
  background-color: transparent;
  outline: none;
  border: 1px solid #ecbe2a;
  border-radius: 42px;
  cursor: pointer;
}

.topline__button:before {
  display: block;
  content: "";
  position: absolute;
  left: 1px;
  top: 1px;
  width: 42px;
  height: 42px;
  background-color: #ecbe2a;
  border-radius: 50%;
}

.topline__button:hover {
  background-color: #ecbe2a;
}

.topline__button:hover .topline__text {
  color: #2d3b4a;
}

.topline__button:active {
  background-color: #d0a313;
}

.topline__img {
  position: absolute;
  left: 11px;
  top: 12px;
}

.topline__text {
  margin: 0 0 0 40px;
  vertical-align: middle;
  color: #ecbe2a;
  font-size: 15px;
  font-family: 'Ubuntu Bold', sans-serif;
}

.topline__contact {
  margin-left: 20px;
}

.topline__phone {
  display: block;
  margin: 0;
  color: #ecbe2a;
  text-align: right;
  font-family: 'Roboto Condensed Bold', sans-serif;
  font-size: 33px;
}

.topline__phone:hover {
  color: #d0a313;
}

.topline__phone:active {
  color: #ecbe2a;
}

.topline__subtext {
  color: #d1d2d3;
  font-family: 'Ubuntu Regular', sans-serif;
  font-size: 13px;
  text-align: right;
  margin: 0;
}

.header {
  background-color: #fff;
}

.header__top {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
  -webkit-box-align: center;
  -webkit-align-items: center;
  align-items: center;
  padding: 20px 0;
}

.header__logo {
  margin-right: 175px;
}

.header__contact {
  display: none;
}

.header__subtext {
  color: #d1d2d3;
  font-family: 'Ubuntu Regular', sans-serif;
  font-size: 13px;
  text-align: right;
  margin: 0;
}

.menu {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
  -webkit-box-align: center;
  -webkit-align-items: center;
  align-items: center;
  width: 100%;
}

.menu__item {
  display: inline-block;
  color: #656673;
  font-family: 'Ubuntu Bold', sans-serif;
  font-size: 16px;
  text-transform: uppercase;
  -webkit-transition: 0.3s;
  transition: 0.3s;
}

.menu__item:hover {
  color: #f9a72b;
  -webkit-transition: 0.2s;
  transition: 0.2s;
}

.menu__item_select {
  padding: 23px 0;
  position: relative;
  padding-right: 30px;
}

.menu__item_select:after {
  display: block;
  content: "";
  position: absolute;
  width: 7px;
  height: 7px;
  bottom: 29px;
  right: 9px;
  border-bottom: 2px solid #f9a72b;
  border-right: 2px solid #f9a72b;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

.menu__item-active {
  background-color: #f2f2f2;
}

.menu__option {
  position: absolute;
  width: 900px;
  top: 84px;
  left: 150px;
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-align: center;
  -webkit-align-items: center;
  align-items: center;
  padding: 15px;
  background-color: #f2f2f2;
}

.menu__dropdown {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  justify-content: flex-start;
  width: 48%;
  border-bottom: 2px solid #fff;
}

.rent {
  display: none;
}

.rent__img {
  width: 60px;
  margin-right: 15px;
}

.rent__text,
.rent__price {
  margin: auto 0;
}

.rent__text {
  width: 200px;
  margin-right: 15px;
  font-family: 'Ubuntu Medium', sans-serif;
}

.rent__text a {
  color: #000;
  -webkit-transition: 0.3s;
  transition: 0.3s;
}

.rent__text a:hover {
  color: #f9a72b;
  -webkit-transition: 0.2s;
  transition: 0.2s;
}

.rent__price {
  text-align: left;
  font-family: 'Roboto Regular', sans-serif;
}

.service {
  display: none;
}

.service__item {
  padding: 10px 0;
}

.service__img {
  margin-right: 15px;
}

.service__text {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  margin: auto 0;
  font-family: 'Ubuntu Medium', sans-serif;
}

.service__text a {
  color: #000;
  -webkit-transition: 0.3s;
  transition: 0.3s;
}

.service__text a:hover {
  color: #f9a72b;
  -webkit-transition: 0.2s;
  transition: 0.2s;
}

/* ========================== MEDIA QUERIES ============================= */

.slider-wrap {
  position: relative;
  z-index: 99;
  margin: auto;
  width: 1920px;
  height: 810px;
}

.slider button {
  display: none;
}

.slider__item {
  position: relative;
}

.slider__label {
  position: absolute;
  max-width: 500px;
  background-color: #f9a72b;
}

.slider__label_1 {
  left: 600px;
  top: 350px;
}

.slider__label_2 {
  left: 430px;
  top: 300px;
}

.slider__label_3 {
  right: 100px;
  top: 320px;
}

.slider__label_4 {
  right: 100px;
  top: 150px;
}

.slider__label_5 {
  right: 100px;
  top: 250px;
}

.slider__text {
  padding: 25px 45px;
  color: #ffffff;
  font-family: 'Ubuntu Bold', sans-serif;
  font-size: 35px;
  text-align: center;
}

.features {
  position: absolute;
  background-color: rgba(27, 35, 44, 0.7);
  bottom: 0;
  left: 0;
  width: 100%;
}

.features__list {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
  padding: 40px 0;
}

.features__item {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(16.66667% - 30px);
}

.features__text {
  color: #ffffff;
  font-family: 'Ubuntu Bold', sans-serif;
  font-size: 16px;
  letter-spacing: -0.64px;
  text-align: center;
}

@media (max-width: 1200px) {
  .topline__item {
    width: 200px;
  }

  .topline__text {
    font-size: 13px;
  }

  .topline__contact {
    margin-left: 0px;
  }

  .topline__phone {
    font-size: 26px;
  }

  .topline__subtext {
    font-size: 11px;
  }

  .header__logo {
    width: 320px;
    margin-right: 40px;
  }

  .menu__option {
    left: 0px;
  }
}

@media screen and (max-width: 992px) {
  .wrapper {
    padding-left: 15px;
    padding-right: 15px;
  }
}

@media (max-width: 992px) {
  .topline__item {
    width: 240px;
  }

  .topline__contact {
    display: none;
  }

  .header__top {
    -webkit-flex-wrap: wrap;
    flex-wrap: wrap;
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
  }

  .header__logo {
    width: 400px;
    margin-right: 60px;
  }

  .header__menu {
    -webkit-box-ordinal-group: 101;
    -webkit-order: 100;
    order: 100;
    width: 90%;
  }

  .header__contact {
    display: block;
  }

  .header__phone {
    font-size: 34px;
  }

  .header__subtext {
    font-size: 14px;
  }

  .menu__option {
    top: 145px;
    left: -15px;
    width: 100%;
  }

  .rent__item {
    width: 49%;
  }

  .rent__img {
    width: 50px;
  }

  .rent__text,
  .rent__price {
    font-size: 14px;
  }
}

@media (max-width: 768px) {
  .topline__items {
    -webkit-flex-wrap: wrap;
    flex-wrap: wrap;
  }

  .topline__item {
    margin: 0 5px;
    width: 170px;
  }

  .header__logo {
    width: 300px;
    margin-right: 20px;
  }

  .header__phone {
    font-size: 26px;
  }

  .header__subtext {
    display: none;
  }

  .menu {
    width: 100%;
  }

  .menu__item {
    font-size: 14px;
    text-align: center;
    padding: 20px10px;
  }

  .menu__item_select {
    padding-right: 30px;
  }

  .menu__option {
    width: 100%;
    left: -15px;
    top: 125px;
    -webkit-box-align: stretch;
    -webkit-align-items: stretch;
    align-items: stretch;
  }

  .rent__item {
    width: 49%;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -webkit-flex-direction: column;
    flex-direction: column;
    -webkit-box-align: center;
    -webkit-align-items: center;
    align-items: center;
    padding: 5px 0;
  }

  .rent__img {
    width: 70px;
    margin: 0;
  }

  .rent__text,
  .rent__price {
    display: block;
    margin: 5px;
    text-align: center;
    font-size: 14px;
  }
}

@media (max-width: 576px) {
  .topline__item {
    margin: 0 5px;
    width: 140px;
  }

  .topline__img {
    display: none;
  }

  .topline__button:before {
    display: none;
  }

  .topline__text {
    margin: 0;
  }

  .header__logo {
    width: 220px;
  }

  .header__phone {
    font-size: 22px;
  }

  .menu {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -webkit-flex-direction: column;
    flex-direction: column;
    margin-top: 10px;
  }

  .menu__item {
    display: block;
    width: 100%;
    padding: 10px;
    background-color: #e4e4e4;
  }

  .menu__item_select:after {
    display: none;
  }

  .menu__item:nth-child(odd) {
    background-color: #f5f5f5;
  }

  .menu__option {
    width: calc(100% - 10px);
    top: 100px;
    left: -10px;
  }

  .rent__item {
    width: 49%;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -webkit-flex-direction: column;
    flex-direction: column;
    -webkit-box-align: center;
    -webkit-align-items: center;
    align-items: center;
    padding: 5px 0;
  }

  .rent__img {
    width: 70px;
    margin: 0;
  }

  .rent__text,
  .rent__price {
    display: block;
    margin: 5px;
    text-align: center;
    font-size: 14px;
  }

  .service {
    top: 137px;
  }

  .service__text {
    font-size: 14px;
  }
}

@media (max-width: 480px) {
  .topline__items {
    display: block;
  }

  .topline__item {
    margin: 5px 0;
    width: 100%;
  }

  .topline__text {
    font-size: 15px;
  }

  .header__logo {
    width: 250px;
    margin: 10px;
  }

  .header__phone {
    margin: 10px;
    font-size: 26px;
  }

  .menu {
    top: 175px;
  }

  .rent__img {
    width: 60px;
  }

  .rent__text,
  .rent__price {
    text-align: center;
    font-size: 14px;
  }

  .rent__text {
    padding: 5px;
    width: 150px;
  }

  .service {
    top: 209px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
